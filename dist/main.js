// Generated by CoffeeScript 2.5.1
// Load config
var Eris, FileSync, Simsimi, adapter, client, config, db, fs, lowdb;

config = require("../config.json");

// Create Discord Client
Eris = require("eris");

client = new Eris(config.token);

client.commands = [];

client.config = config;

// Create Simsimi Client
Simsimi = require("./simsimi");

client.simsimi = new Simsimi(config.simsimi);

// Init database
lowdb = require("lowdb");

FileSync = require("lowdb/adapters/FileSync");

adapter = new FileSync('./db.json');

db = lowdb(adapter);

db.defaults({
  chatUses: {},
  serversLanguages: {},
  serversChannels: {}
}).write();

client.db = db;

// Load commands
fs = require("fs");

fs.readdir(`${__dirname}/commands`, function(err, data) {
  if (!data) {
    return console.log(`No command found...`);
  }
  data.forEach(function(filePath) {
    var cmdData;
    cmdData = require(`${__dirname}/commands/${filePath}`);
    client.commands.push({
      name: cmdData.help.name,
      onlyMod: cmdData.help.onlyMod,
      run: cmdData.run
    });
    return console.log(`Loading Command: ${cmdData.help.name} ğŸ‘Œ`);
  });
  return console.log(`Loading a total of ${client.commands.length} commands!`);
});

client.on('ready', function() {
  return console.log(`Logged as ${client.user.username}#${client.user.discriminator}`);
});

client.on('messageCreate', async function(message) {
  var args, command, commandFound, guildChannel, guildLanguage, res, userData;
  // Ignore bots
  if (message.author.bot || !message.channel) {
    return;
  }
  guildChannel = client.db.get("serversChannels").value()[message.channel.guild.id];
  if (guildChannel && message.channel.id === guildChannel) {
    
    // Check uses
    userData = client.db.get("chatUses").value()[message.author.id] || 0;
    if (userData > client.config.maxRequestPerUser) {
      return client.createMessage(message.channel.id, `:x: Ratelimit exceeded. You can't send messages to simsimi anymore...`);
    }
    // Try to get guild language
    guildLanguage = client.db.get("serversLanguages").value()[message.channel.guild.id];
    // Make the request
    res = (await client.simsimi.request(message.content, guildLanguage));
    if (!res.atext) {
      return message.addReaction("ğŸ˜¢");
    }
    // Reply
    client.createMessage(message.channel.id, `${res.atext}`);
    // Save uses
    client.db.set(`chatUses.${message.author.id}`, userData + 1).write();
  }
  if (!message.content.startsWith(config.prefix)) {
    return;
  }
  args = message.content.slice(config.prefix.length).trim().split(/ +/g);
  command = args.shift().toLowerCase();
  commandFound = client.commands.find(function(cmdData) {
    return cmdData.name === command;
  });
  if (!commandFound) {
    return client.createMessage(message.channel.id, `Unknown command. Send \`${config.prefix}help\` to get the list of commands.`);
  } else {
    if (commandFound.onlyMod && !message.member.permission.json.manageMessages) {
      return client.createMessage(message.channel.id, ":x: Only mods can run this command");
    }
    if (commandFound.name === "eval" && message.author.id !== config.owner) {
      return client.createMessage(message.channel.id, ":x: Only the owner can run this command");
    }
    return commandFound.run(client, message, args);
  }
});

// Login to Discord
client.connect();
